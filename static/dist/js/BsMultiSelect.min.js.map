{"version":3,"sources":["../../js/src/Bs4AdapterCss.js","../../js/src/Bs4AdapterJs.js","../../js/src/MultiSelect.js","../../js/src/Bs4Adapter.js","../../js/src/OptionsAdapterElement.js","../../js/src/OptionsAdapterJson.js","../../js/src/BsMultiSelect.js","../../js/src/AddToJQueryPrototype.js"],"names":["Bs4AdapterCss","configuration","$","tmp","extend","selectedPanelFocusClass","selectedPanelDisabledClass","selectedItemContentDisabledClass","dropDownItemDisabledClass","this","DisableSelectedItemContent","$content","addClass","DisabledStyle","$checkBox","isDisbaled","removeClass","Enable","$selectedPanel","Disable","FocusIn","FocusOut","defSelectedPanelStyle","margin-bottom","height","defSelectedItemStyle","padding-left","line-height","defRemoveSelectedItemButtonStyle","font-size","Bs4AdapterJs","selectedPanelDefMinHeight","selectedPanelLgMinHeight","selectedPanelSmMinHeight","selectedPanelDisabledBackgroundColor","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","selectedPanelFocusValidBoxShadow","selectedPanelFocusInvalidBoxShadow","filterInputColor","selectedItemContentDisabledOpacity","dropdDownLabelDisabledColor","OnInit","dom","selectedPanel","css","filterInput","CreateSelectedItemContent","$selectedItem","$button","siblings","UpdateSize","hasClass","background-color","defSelectedPanelStyleSys","display","flex-wrap","list-style-type","defFilterInputStyleSys","width","border","padding","outline","defDropDownMenuStyleSys","MultiSelect","optionsAdapter","adapter","onDispose","window","Popper","TypeError","document","container","filterInputItem","dropDownMenu","popper","getDisabled","selectedPanelClick","documentMouseup","containerMousedown","documentMouseup2","disabled","filterInputItemOffsetLeft","skipFocusout","hoveredDropDownItem","hoveredDropDownIndex","hasDropDownVisible","$document","init","updateDropDownPosition","force","offsetLeft","update","hideDropDown","style","showDropDown","resetDropDownMenuHover","HoverOut","filterDropDownMenu","_this","text","value","trim","toLowerCase","visible","find","each","i","dropDownMenuItem","$dropDownMenuItem","show","itemText","data","option","selected","hidden","indexOf","hide","visibleNodeListArray","getVisibleNodeListArray","hoverInInternal","clearFilterInput","updatePosition","input","closeDropDown","appendDropDownItem","optionElement","onChange","_this2","isHidden","$dropDownItem","prop","appendTo","adjustDropDownItem","CreateDropDownItemContent","isDisabled","disabledStyle","disable","onSelected","toggleItem","focus","selectItem","doPublishEvents","adjustPair","isSelected","toggle","remove","select","removeItem","removeItemAndCloseDropDown","insertBefore","mouseover","HoverIn","mouseout","toArray","index","keydownArrow","down","length","newIndex","forceUpdatePosition","Update","UpdateIsValid","UpdateSizeImpl","UpdateDisabledImpl","Dispose","unbind","destroy","removeContainer","UpdateDisabled","$container","mousedown","mouseup","click","fillContainer","_this3","createElement","$filterInputItem","get","$filterInput","$dropDownMenu","event","target","contains","nodeName","val","IsClickToOpenDropdown","Init","getOptions","_this4","placement","modifiers","preventOverflow","enabled","flip","options","el","focusin","focusout","on","which","preventDefault","$penult","prev","dropDownItems","querySelectorAll","dropDownItem","it","textContent","disableButton","OptionsAdapterElement","selectElement","$selectElement","getIsValid","getIsInvalid","createInputId","containerClass","name","label","$formGroup","closest","$label","id","getAttribute","createCheckBoxId","ms","_ms$fillContainer","parentNode","removeChild","insertAfter","trigger","OptionsAdapterJson","hasOwnProperty","firstChild","Bs4Adapter","stylingAdapter","dropDownMenuClass","dropDownItemClass","dropDownItemHoverClass","selectedPanelClass","selectedItemClass","removeSelectedItemButtonClass","filterInputItemClass","filterInputClass","bs4LabelDispose","createDropDownItemContent","checkBoxId","$dropDownItemContent","attr","$checkBoxLabel","dropDownItemContent","e","createSelectedItemContent","optionItem","removeSelectedItem","controlDisabled","setTimeout","HandleLabel","newForId","backupForId","setAttribute","parentElement","pluginName","createPlugin","firstChar","charAt","firstCharLower","prototypableName","slice","noConflictPrototypable","fn","dataKey","prototypable","$e","instance","isMethodName","test","removeData","methodName","noConflict","AddToJQueryPrototype","element","useCss"],"mappings":"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","sourcesContent":["class Bs4AdapterCss {\r\n\r\n    constructor(configuration, $) {\r\n        const defaults = {\r\n            selectedPanelFocusClass : 'focus',\r\n            selectedPanelDisabledClass: 'disabled',\r\n            selectedItemContentDisabledClass: 'disabled',\r\n            dropDownItemDisabledClass: 'disabled'\r\n        };\r\n        let tmp = $.extend({}, defaults, configuration);\r\n        this.configuration = $.extend(configuration, tmp);\r\n    }\r\n\r\n    DisableSelectedItemContent($content){\r\n        $content.addClass(this.configuration.selectedItemContentDisabledClass )\r\n    }\r\n\r\n    DisabledStyle($checkBox, isDisbaled){\r\n        if (isDisbaled) \r\n            $checkBox.addClass(this.configuration.dropDownItemDisabledClass);\r\n        else\r\n            $checkBox.removeClass(this.configuration.dropDownItemDisabledClass);\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        $selectedPanel.removeClass(this.configuration.selectedPanelDisabledClass)\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        $selectedPanel.addClass(this.configuration.selectedPanelDisabledClass)\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        $selectedPanel.addClass(this.configuration.selectedPanelFocusClass);\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n        $selectedPanel.removeClass(this.configuration.selectedPanelFocusClass);\r\n    }\r\n}\r\n\r\nexport default Bs4AdapterCss;\r\n","const defSelectedPanelStyle = {'margin-bottom': '0', 'height': 'auto'};\r\nconst defSelectedItemStyle = {'padding-left': '0px', 'line-height': '1.5em'};\r\nconst defRemoveSelectedItemButtonStyle = {'font-size':'1.5em', 'line-height': '.9em'};\r\n\r\nclass Bs4AdapterJs {\r\n    constructor(configuration, $) {\r\n        const defaults = {\r\n            selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\r\n            selectedPanelLgMinHeight:  'calc(2.875rem + 2px)',\r\n            selectedPanelSmMinHeight:  'calc(1.8125rem + 2px)',\r\n            selectedPanelDisabledBackgroundColor: '#e9ecef',\r\n            selectedPanelFocusBorderColor: '#80bdff',\r\n            selectedPanelFocusBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\r\n            selectedPanelFocusValidBoxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\r\n            selectedPanelFocusInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\r\n            filterInputColor: '#495057',\r\n            selectedItemContentDisabledOpacity: '.65',\r\n            dropdDownLabelDisabledColor: '#6c757d'\r\n        };\r\n        let tmp = $.extend({}, defaults, configuration);\r\n        this.configuration = $.extend(configuration, tmp);\r\n    }\r\n\r\n    OnInit(dom){\r\n        dom.selectedPanel.css(defSelectedPanelStyle);\r\n        dom.filterInput.css(\"color\", this.configuration.filterInputColor);\r\n    }\r\n\r\n    \r\n    CreateSelectedItemContent($selectedItem, $button){\r\n        $selectedItem.css(defSelectedItemStyle);\r\n        $button.css(defRemoveSelectedItemButtonStyle);\r\n    }\r\n\r\n    DisableSelectedItemContent($content){\r\n        $content.css(\"opacity\", this.configuration.selectedItemContentDisabledOpacity )\r\n    }\r\n\r\n    DisabledStyle($checkBox, isDisbaled){\r\n        $checkBox.siblings('label').css('color', isDisbaled?this.configuration.dropdDownLabelDisabledColor:'')\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if ($selectedPanel.hasClass(\"form-control-lg\")){\r\n            $selectedPanel.css(\"min-height\", this.configuration.selectedPanelLgMinHeight);\r\n        } else if ($selectedPanel.hasClass(\"form-control-sm\")){\r\n            $selectedPanel.css(\"min-height\", this.configuration.selectedPanelSmMinHeight);\r\n        } else {\r\n            $selectedPanel.css(\"min-height\", this.configuration.selectedPanelDefMinHeight);\r\n        }\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        $selectedPanel.css({\"background-color\": \"\"})\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        $selectedPanel.css({\"background-color\": this.configuration.selectedPanelDisabledBackgroundColor})\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        if ($selectedPanel.hasClass(\"is-valid\")){\r\n            $selectedPanel.css(\"box-shadow\", this.configuration.selectedPanelFocusValidBoxShadow);\r\n        } else if ($selectedPanel.hasClass(\"is-invalid\")){\r\n            $selectedPanel.css(\"box-shadow\", this.configuration.selectedPanelFocusInvalidBoxShadow);\r\n        } else {\r\n            $selectedPanel\r\n                .css(\"box-shadow\", this.configuration.selectedPanelFocusBoxShadow)\r\n                .css(\"border-color\", this.configuration.selectedPanelFocusBorderColor);\r\n        }\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n            $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n    }\r\n}\r\n\r\nexport default Bs4AdapterJs;\r\n","import Popper from 'popper.js'\r\n\r\nconst defSelectedPanelStyleSys = {'display':'flex', 'flex-wrap':'wrap', 'list-style-type':'none'};  // remove bullets since this is ul\r\nconst defFilterInputStyleSys   = {'width':'2ch', 'border':'0', 'padding':'0', 'outline':'none', 'background-color':'transparent' };\r\nconst defDropDownMenuStyleSys  = {'list-style-type':'none'}; // remove bullets since this is ul\r\n\r\n// jQuery used for:\r\n// $.extend, $.contains, $(\"<div>\"), $(function(){}) aka ready\r\n// $e.trigger, $e.unbind, $e.on; but namespaces are not used;\r\n// events: \"focusin\", \"focusout\", \"mouseover\", \"mouseout\", \"keydown\", \"keyup\", \"click\"\r\n// $e.show, $e.hide, $e.focus, $e.css\r\n// $e.appendTo, $e.remove, $e.find, $e.closest, $e.prev, $e.data, $e.val\r\n\r\nclass MultiSelect {\r\n    constructor(optionsAdapter, adapter, configuration, onDispose, window, $) {\r\n        if (typeof Popper === 'undefined') {\r\n            throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\r\n        }\r\n        // readonly\r\n        this.adapter = adapter;\r\n        this.window = window;\r\n        this.document = window.document;\r\n        this.onDispose=onDispose;\r\n        this.$ = $;\r\n        \r\n        this.configuration = configuration;\r\n        \r\n        this.container = null;\r\n        this.selectedPanel = null;\r\n        this.filterInputItem = null;\r\n        this.filterInput = null;\r\n        this.dropDownMenu = null;\r\n        this.popper = null;\r\n        this.getDisabled=null;\r\n        // removable handlers\r\n        this.selectedPanelClick  = null;\r\n        this.documentMouseup   = null;\r\n        this.containerMousedown   = null;\r\n        this.documentMouseup2   = null;\r\n        // state\r\n        this.disabled=null;\r\n        this.filterInputItemOffsetLeft = null; // used to detect changes in input field position (by comparision with current value)\r\n        this.skipFocusout = false;\r\n        this.hoveredDropDownItem = null;\r\n        this.hoveredDropDownIndex = null;\r\n        this.hasDropDownVisible = false;\r\n\r\n        // jquery adapters\r\n        this.$document= $(this.document);\r\n\r\n        //this.createContainer();\r\n        optionsAdapter.init(this);\r\n    }\r\n    updateDropDownPosition(force) {\r\n        let offsetLeft = this.filterInputItem.offsetLeft;\r\n        if (force || this.filterInputItemOffsetLeft!=offsetLeft){\r\n            this.popper.update();\r\n            this.filterInputItemOffsetLeft=offsetLeft;\r\n        }\r\n    }\r\n    hideDropDown() {\r\n        this.dropDownMenu.style.display = 'none';\r\n    }\r\n    showDropDown() {\r\n        this.dropDownMenu.style.display = 'block';\r\n    }\r\n    // Public methods\r\n    resetDropDownMenuHover() {\r\n        if (this.hoveredDropDownItem !== null) {\r\n            this.adapter.HoverOut(this.$(this.hoveredDropDownItem));\r\n            this.hoveredDropDownItem = null;\r\n            this.hoveredDropDownIndex = null;\r\n        }\r\n    }\r\n\r\n    filterDropDownMenu() {\r\n        let text = this.filterInput.value.trim().toLowerCase();\r\n        let visible = 0;\r\n        this.$(this.dropDownMenu).find('LI').each((i, dropDownMenuItem) => {\r\n            let $dropDownMenuItem = this.$(dropDownMenuItem);\r\n            if (text == '') {\r\n                $dropDownMenuItem.show();\r\n                visible++;\r\n            }\r\n            else {\r\n                let itemText = $dropDownMenuItem.data(\"option-text\");\r\n                let option = $dropDownMenuItem.data(\"option\");\r\n                if (!option.selected && !option.hidden && !option.disabled && itemText.indexOf(text)>=0) {\r\n                    $dropDownMenuItem.show();\r\n                    visible++;\r\n                } else {\r\n                    $dropDownMenuItem.hide();\r\n                }\r\n            }\r\n        });\r\n        this.hasDropDownVisible = visible > 0;\r\n        this.resetDropDownMenuHover();\r\n        if (visible == 1) {\r\n            let visibleNodeListArray = this.getVisibleNodeListArray();\r\n            this.hoverInInternal(visibleNodeListArray, 0)\r\n        }\r\n    }\r\n\r\n    clearFilterInput(updatePosition) {\r\n        if (this.filterInput.value) {\r\n            this.filterInput.value = '';\r\n            this.input(updatePosition);\r\n        }\r\n    }\r\n\r\n    closeDropDown() {\r\n        this.resetDropDownMenuHover();\r\n        this.clearFilterInput(true);\r\n        this.hideDropDown();\r\n    }\r\n    \r\n    appendDropDownItem(optionElement, onChange) {\r\n        let isHidden = optionElement.hidden;\r\n        let itemText = optionElement.text;\r\n        let $dropDownItem = this.$(\"<LI/>\").prop(\"hidden\", isHidden)\r\n        $dropDownItem.data(\"option-text\", itemText.toLowerCase()).appendTo(this.dropDownMenu);\r\n        $dropDownItem.data(\"option\", optionElement);\r\n        \r\n        //let optionData = {\"optionId\":optionElement.value, \"itemText\": optionElement.text }\r\n        let adjustDropDownItem = this.adapter.CreateDropDownItemContent($dropDownItem, optionElement);\r\n        let isDisabled = optionElement.disabled;\r\n        let isSelected = optionElement.selected;\r\n\r\n        if (isSelected && isDisabled)\r\n            adjustDropDownItem.disabledStyle(true);\r\n        else if (isDisabled)\r\n            adjustDropDownItem.disable(isDisabled);\r\n       \r\n        adjustDropDownItem.onSelected(() => {\r\n            let toggleItem = $dropDownItem.data(\"option-toggle\");\r\n            toggleItem();\r\n            this.filterInput.focus();\r\n        });\r\n        \r\n        let selectItem = (doPublishEvents) => {\r\n            if (optionElement.hidden)\r\n                return;\r\n            let $selectedItem = this.$(\"<LI/>\")\r\n            \r\n            let adjustPair =(isSelected, toggle, remove) => {\r\n                optionElement.selected = isSelected;\r\n                adjustDropDownItem.select(isSelected);\r\n                $dropDownItem.data(\"option-toggle\", toggle);                    \r\n                $selectedItem.data(\"option-remove\", remove)\r\n            }\r\n\r\n            let removeItem = () => {\r\n                adjustDropDownItem.disabledStyle(false);\r\n                adjustDropDownItem.disable(optionElement.disabled);\r\n                adjustPair(\r\n                    false, \r\n                    () => {\r\n                        if (optionElement.disabled)\r\n                            return;\r\n                        selectItem(true);\r\n                    }, \r\n                    null\r\n                    )\r\n                $selectedItem.remove();\r\n                onChange();\r\n            };\r\n            \r\n            let removeItemAndCloseDropDown = () => {\r\n                removeItem();\r\n                this.closeDropDown();\r\n            };\r\n            this.adapter.CreateSelectedItemContent(\r\n                $selectedItem,\r\n                optionElement,\r\n                removeItemAndCloseDropDown,\r\n                this.disabled\r\n            );\r\n            adjustPair(true, removeItem, removeItemAndCloseDropDown);\r\n            $selectedItem.insertBefore(this.filterInputItem);\r\n            if (doPublishEvents){\r\n                onChange();\r\n            }\r\n        }\r\n\r\n        $dropDownItem\r\n            .mouseover(() => this.adapter.HoverIn($dropDownItem))\r\n            .mouseout(() => this.adapter.HoverOut($dropDownItem));\r\n        \r\n        if (optionElement.selected)\r\n            selectItem(false);\r\n        else\r\n            $dropDownItem.data(\"option-toggle\",  () => { \r\n                if (optionElement.disabled)\r\n                    return;\r\n                selectItem(true);\r\n            })\r\n    }\r\n    getVisibleNodeListArray(){\r\n        return this.$(this.dropDownMenu).find('LI:not([style*=\"display: none\"]):not(:hidden)').toArray();\r\n    }\r\n    hoverInInternal(visibleNodeListArray, index){\r\n        this.hoveredDropDownIndex = index;\r\n        this.hoveredDropDownItem = visibleNodeListArray[index];\r\n        this.adapter.HoverIn(this.$(this.hoveredDropDownItem));\r\n    }\r\n    keydownArrow(down) {\r\n        let visibleNodeListArray = this.getVisibleNodeListArray();\r\n        if (visibleNodeListArray.length > 0) {\r\n            if (this.hasDropDownVisible) {\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n            let index;\r\n            if (this.hoveredDropDownItem === null) {\r\n                index = down ? 0 : visibleNodeListArray.length - 1;\r\n            }\r\n            else {\r\n                this.adapter.HoverOut(this.$(this.hoveredDropDownItem));\r\n                if (down) {\r\n                    let newIndex = this.hoveredDropDownIndex + 1;\r\n                    index = newIndex < visibleNodeListArray.length ? newIndex : 0;\r\n                } else {\r\n                    let newIndex = this.hoveredDropDownIndex - 1;\r\n                    index = newIndex >= 0 ? newIndex : visibleNodeListArray.length - 1;\r\n                }\r\n            }\r\n            this.hoverInInternal(visibleNodeListArray, index);\r\n        }\r\n    }\r\n    input(forceUpdatePosition) {\r\n        this.filterInput.style.width = this.filterInput.value.length*1.3 + 2 + \"ch\";\r\n        this.filterDropDownMenu();\r\n\r\n        if (this.hasDropDownVisible) {\r\n            if (forceUpdatePosition) // ignore it if it is called from\r\n                this.updateDropDownPosition(forceUpdatePosition); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\r\n            this.showDropDown();\r\n        } else {\r\n            this.hideDropDown();\r\n        }\r\n    }\r\n    Update(){\r\n        let $selectedPanel = this.$(this.selectedPanel);\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl(this.$(this.container), $selectedPanel);\r\n    }\r\n    Dispose(){\r\n        if (this.onDispose)\r\n            this.onDispose();\r\n        \r\n        // removable handlers\r\n        this.$document.unbind(\"mouseup\", this.documentMouseup)\r\n                      .unbind(\"mouseup\", this.documentMouseup2);\r\n        \r\n        if (this.adapter !== null) {\r\n            this.adapter.Dispose()\r\n        }\r\n        if (this.popper !== null) {\r\n            this.popper.destroy()\r\n        }\r\n        \r\n        if (this.removeContainer) {\r\n            this.removeContainer();\r\n        }\r\n    }\r\n    UpdateSize(){\r\n        this.UpdateSizeImpl(this.$(this.selectedPanel));\r\n    }\r\n    UpdateDisabled(){\r\n        this.UpdateDisabledImpl(this.$(this.container), this.$(this.selectedPanel));\r\n    }\r\n    UpdateSizeImpl($selectedPanel){\r\n        if (this.adapter.UpdateSize)\r\n            this.adapter.UpdateSize($selectedPanel);\r\n    }\r\n    UpdateDisabledImpl($container, $selectedPanel){\r\n        let disabled = this.getDisabled();\r\n        if (this.disabled!==disabled){\r\n            if (disabled) {\r\n                this.filterInput.style.display = \"none\";\r\n                this.adapter.Disable($selectedPanel);\r\n\r\n                $container.unbind(\"mousedown\", this.containerMousedown);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup);\r\n\r\n                $selectedPanel.unbind(\"click\", this.selectedPanelClick);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup2);\r\n                \r\n            } else {\r\n                this.filterInput.style.display = \"inline-block\";\r\n                this.adapter.Enable($selectedPanel);\r\n\r\n                $container.mousedown(this.containerMousedown);    // removable\r\n                this.$document.mouseup(this.documentMouseup); // removable\r\n\r\n                $selectedPanel.click(this.selectedPanelClick);     // removable\r\n                this.$document.mouseup(this.documentMouseup2); // removable\r\n            }\r\n            this.disabled=disabled;\r\n        }\r\n    }\r\n    fillContainer(container, removeContainer){\r\n        this.container=container;\r\n        this.removeContainer=removeContainer;\r\n        let $container = this.$(container);\r\n        this.selectedPanel = this.document.createElement(\"ul\");\r\n        let $selectedPanel = this.$(this.selectedPanel);\r\n        $selectedPanel.css(defSelectedPanelStyleSys);\r\n        $selectedPanel.appendTo(container);\r\n        let $filterInputItem = this.$('<LI/>');\r\n        this.filterInputItem = $filterInputItem.get(0)\r\n        $filterInputItem.appendTo(this.selectedPanel);\r\n        let $filterInput = this.$('<INPUT type=\"search\" autocomplete=\"off\">');\r\n        this.filterInput = $filterInput.get(0);\r\n        $filterInput.css(defFilterInputStyleSys);\r\n        $filterInput.appendTo(this.filterInputItem);\r\n        \r\n        let $dropDownMenu = this.$(\"<UL/>\").css({\"display\":\"none\"});\r\n        $dropDownMenu.appendTo(container);\r\n        this.dropDownMenu = $dropDownMenu.get(0);\r\n        \r\n        // prevent heavy understandable styling error\r\n        $dropDownMenu.css(defDropDownMenuStyleSys);\r\n        // create handlers\r\n        this.documentMouseup = () => {\r\n            this.skipFocusout = false;\r\n        }\r\n\r\n        this.containerMousedown = () => {\r\n            this.skipFocusout = true;\r\n        };\r\n        this.documentMouseup2 = event => {\r\n            if (!(container === event.target || this.$.contains(container, event.target))) {\r\n                this.closeDropDown();\r\n            }\r\n        }\r\n        this.selectedPanelClick = event => {\r\n            if (event.target.nodeName != \"INPUT\")\r\n                this.$(this.filterInput).val('').focus();\r\n            if (this.hasDropDownVisible && this.adapter.IsClickToOpenDropdown(event)){\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n        };\r\n        this.adapter.Init({\r\n            container:$container, selectedPanel:$selectedPanel,\r\n            filterInputItem:$filterInputItem, filterInput:$filterInput,\r\n            dropDownMenu:$dropDownMenu });\r\n        return {$container, $selectedPanel, $dropDownMenu, $filterInput};\r\n    }\r\n\r\n    init($container, $selectedPanel, $dropDownMenu, $filterInput, onChange, getOptions, getDisabled) {\r\n        this.getDisabled=getDisabled;\r\n        this.popper = new Popper(this.filterInput, this.dropDownMenu, {\r\n            placement: 'bottom-start',\r\n            modifiers: {\r\n                preventOverflow: {enabled:false},\r\n                hide: {enabled:false},\r\n                flip: {enabled:false}\r\n                }\r\n        });\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl($container, $selectedPanel);\r\n        // some browsers (IE11) can change select value (as part of \"autocomplete\") after page is loaded but before \"ready\" event\r\n        // FYI: $(() => { ...}) is jquery ready event shortcut\r\n        this.$(() => {\r\n            let options = getOptions();\r\n            this.$.each(options,\r\n                (index, el) => {\r\n                    this.appendDropDownItem(el, onChange);\r\n                }\r\n            );\r\n            this.hasDropDownVisible = options.length > 0;\r\n            this.updateDropDownPosition(false);\r\n        });\r\n        // there was unmotivated stopPropagation call. commented out.\r\n        // $dropDownMenu.click(  event => { \r\n        //    event.stopPropagation();\r\n        // });\r\n        $dropDownMenu.mouseover(() => this.resetDropDownMenuHover());\r\n\r\n        $filterInput.focusin(() => this.adapter.FocusIn($selectedPanel))\r\n                    .focusout(() => {\r\n                            if (!this.skipFocusout)\r\n                                this.adapter.FocusOut($selectedPanel)\r\n                            });\r\n        $filterInput.on(\"keydown\", (event) => {\r\n            if ([38, 40, 13].indexOf(event.which)>=0 || (event.which == 9 && this.filterInput.value) ) {\r\n                event.preventDefault();\r\n            }\r\n\r\n            if (event.which == 38) {\r\n                this.keydownArrow(false);\r\n            }\r\n            else if (event.which == 40) {\r\n                if (this.hoveredDropDownItem === null && this.hasDropDownVisible) {\r\n                    this.showDropDown();\r\n                }\r\n                this.keydownArrow(true);\r\n            }\r\n            else if (event.which == 9) {\r\n                if (!this.filterInput.value) {\r\n                    this.closeDropDown();\r\n                }\r\n            }\r\n            else if (event.which == 8) {\r\n                // NOTE: this will process backspace only if there are no text in the input field\r\n                // If user will find this inconvinient, we will need to calculate something like this\r\n                // this.isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n                if (!this.filterInput.value)\r\n                {\r\n                    let $penult = this.$(this.selectedPanel).find(\"LI:last\").prev();\r\n                    if ($penult.length){\r\n                        let removeItem = $penult.data(\"option-remove\");\r\n                        removeItem();\r\n                    }\r\n                    this.updateDropDownPosition(false);\r\n                }\r\n            }\r\n\r\n            if ([38, 40, 13, 9].indexOf(event.which)==-1)\r\n                this.resetDropDownMenuHover();\r\n        });\r\n        $filterInput.on(\"keyup\", (event) => {\r\n            if (event.which == 13 || event.which == 9 ) {\r\n                if (this.hoveredDropDownItem) {\r\n                    let $hoveredDropDownItem = this.$(this.hoveredDropDownItem);\r\n                    let toggleItem =  $hoveredDropDownItem.data(\"option-toggle\");\r\n                    toggleItem();\r\n                    this.closeDropDown();\r\n                } else {\r\n                    let text = this.filterInput.value.trim().toLowerCase();\r\n                    let dropDownItems = this.dropDownMenu.querySelectorAll(\"LI\");\r\n                    let dropDownItem = null;\r\n                    for (let i = 0; i < dropDownItems.length; ++i) {\r\n                        let it = dropDownItems[i];\r\n                        if (it.textContent.trim().toLowerCase() == text)\r\n                        {\r\n                            dropDownItem=it;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (dropDownItem) {\r\n                        let $dropDownItem = this.$(dropDownItem);\r\n                        let option = $dropDownItem.data(\"option\");\r\n                        if (!option.selected){\r\n                            let toggle = $dropDownItem.data(\"option-toggle\");\r\n                            toggle();\r\n                        }\r\n                        this.clearFilterInput(true);\r\n                    }\r\n                }\r\n            }\r\n            else if (event.which == 27) { // escape\r\n                this.closeDropDown();\r\n            }\r\n        });\r\n        $filterInput.on('input', () => {\r\n            this.input(true);\r\n        });\r\n    }\r\n}\r\n\r\nexport default MultiSelect;\r\n","function disableButton($selectedPanel, isDisabled){\r\n    $selectedPanel.find('BUTTON').prop(\"disabled\", isDisabled);\r\n}\r\n\r\n// addClass, removeClass, css, siblings('label'), hasClass, find('BUTTON').prop(..)\r\nclass Bs4Adapter {\r\n\r\n    constructor(\r\n        stylingAdapter, configuration, $){\r\n        const defaults = {\r\n            containerClass: 'dashboardcode-bsmultiselect',\r\n            dropDownMenuClass: 'dropdown-menu',\r\n            dropDownItemClass:  'px-2',\r\n            dropDownItemHoverClass: 'text-primary bg-light',\r\n            selectedPanelClass: 'form-control',\r\n            selectedItemClass: 'badge',\r\n            removeSelectedItemButtonClass: 'close',\r\n            filterInputItemClass: '',\r\n            filterInputClass: ''\r\n        }\r\n        let tmp = $.extend({}, defaults, configuration);\r\n        this.configuration = $.extend(configuration, tmp);\r\n        this.$ = $;\r\n        this.stylingAdapter = stylingAdapter;\r\n        this.bs4LabelDispose = null;\r\n        \r\n        this.createDropDownItemContent = (configuration, $dropDownItem, option) => {\r\n            let checkBoxId = this.configuration.createCheckBoxId(configuration, option);\r\n            let $dropDownItemContent= this.$(`<div class=\"custom-control custom-checkbox\">\r\n                <input type=\"checkbox\" class=\"custom-control-input\">\r\n                <label class=\"custom-control-label\"></label>\r\n            </div>`);\r\n            $dropDownItemContent.appendTo($dropDownItem);\r\n            let $checkBox = $dropDownItemContent.find(`INPUT[type=\"checkbox\"]`);\r\n            $checkBox.attr('id',  checkBoxId);\r\n            let $checkBoxLabel = $dropDownItemContent.find(`label`);\r\n            $checkBoxLabel.attr('for',  checkBoxId);\r\n            $checkBoxLabel.text(option.text);\r\n            $dropDownItem.addClass(configuration.dropDownItemClass);\r\n    \r\n            let dropDownItem = $dropDownItem.get(0);\r\n            let dropDownItemContent = $dropDownItemContent.get(0);\r\n     \r\n            let stylingAdapter = this.stylingAdapter;\r\n            return { \r\n                select(isSelected){ $checkBox.prop('checked', isSelected); }, \r\n                disable(isDisabled){ $checkBox.prop('disabled', isDisabled); },\r\n                disabledStyle(disabledStyle){ stylingAdapter.DisabledStyle($checkBox, disabledStyle); },\r\n                onSelected(toggle) {\r\n                        $checkBox.on(\"change\", toggle)\r\n                        $dropDownItem.on(\"click\", (e) => {\r\n                            if (e.target == dropDownItem || e.target == dropDownItemContent)\r\n                                toggle();\r\n                        })\r\n                }\r\n            }\r\n        }\r\n\r\n        this.createSelectedItemContent = (configuration, $selectedItem, optionItem, removeSelectedItem, controlDisabled) => {\r\n            let $content = this.$(`<span/>`).text(optionItem.text);\r\n            $content.appendTo($selectedItem);\r\n            if (optionItem.disabled)\r\n                this.stylingAdapter.DisableSelectedItemContent($content);\r\n            let $button = this.$('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>')\r\n                // bs 'close' class that will be added to button set the float:right, therefore it impossible to configure no-warp policy \r\n                // with .css(\"white-space\", \"nowrap\") or  .css(\"display\", \"inline-block\"); TODO: migrate to flex? \r\n                .css(\"float\", \"none\")\r\n    \r\n                // what is a problem with calling removeSelectedItem directly (not using  setTimeout(removeSelectedItem, 0)):\r\n                // consider situation \"MultiSelect\" on DROPDOWN (that should be closed on the click outside dropdown)\r\n                // therefore we aslo have document's click's handler where we decide to close or leave the DROPDOWN open.\r\n                // because of the event's bubling process removeSelectedItem runs first. \r\n                // that means the event's target element on which we click (the x button) will be removed from the DOM together with badge \r\n                // before we could analize is it belong to our dropdown or not.\r\n                // important 1: we can't just the stop propogation using stopPropogate because click outside dropdown on the similar \r\n                // component that use stopPropogation will not close dropdown (error, dropdown should be closed)\r\n                // important 2: we can't change the dropdown's event handler to leave dropdown open if event's target is null because of\r\n                // the situation described above: click outside dropdown on the same component.\r\n                // Alternatively it could be possible to use stopPropogate but together create custom click event setting new target that belomgs to DOM (e.g. panel)\r\n                \r\n                .on(\"click\", () => setTimeout(removeSelectedItem, 0)) \r\n                .appendTo($selectedItem)\r\n                .prop(\"disabled\", controlDisabled)\r\n            $selectedItem.addClass(configuration.selectedItemClass);\r\n            $button.addClass(configuration.removeSelectedItemButtonClass) // bs close class set the float:right\r\n            if (this.stylingAdapter.CreateSelectedItemContent)\r\n                this.stylingAdapter.CreateSelectedItemContent($selectedItem, $button)\r\n        }\r\n    }\r\n   \r\n\r\n    // ------------------------------------------------------------------------------------------------\r\n    Init(dom){\r\n        dom.container.addClass(this.configuration.containerClass);\r\n        dom.selectedPanel.addClass(this.configuration.selectedPanelClass);\r\n        dom.dropDownMenu.addClass(this.configuration.dropDownMenuClass);\r\n        dom.filterInputItem.addClass(this.configuration.filterInputItemClass);\r\n        dom.filterInput.addClass(this.configuration.filterInputClass);\r\n        if (this.stylingAdapter.OnInit)\r\n            this.stylingAdapter.OnInit(dom)\r\n        this.bs4LabelDispose = this.HandleLabel(dom.filterInput);\r\n    }\r\n\r\n    HandleLabel($filterInput){\r\n        var label = this.configuration.label;\r\n        if (label!=null) {\r\n            var newForId = this.configuration.createInputId(this.configuration);\r\n            var backupForId =  label.getAttribute('for');\r\n            $filterInput.attr('id', newForId);\r\n            label.setAttribute('for',newForId);\r\n            return () => {\r\n                label.setAttribute('for',backupForId);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    Dispose(){\r\n        if (this.bs4LabelDispose)\r\n            this.bs4LabelDispose();\r\n    }\r\n\r\n    // ------------------------------------------------------------------------------------------------\r\n    CreateDropDownItemContent($dropDownItem, option){\r\n        return this.createDropDownItemContent(this.configuration, $dropDownItem, option);\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, optionItem, removeSelectedItem, controlDisabled){\r\n        return this.createSelectedItemContent(this.configuration, $selectedItem, optionItem, removeSelectedItem, controlDisabled);\r\n    }\r\n\r\n    // -----------------------\r\n    IsClickToOpenDropdown(event){\r\n        const target = event.target;\r\n        const nodeName = target.nodeName;\r\n        return !(nodeName == \"BUTTON\" || (nodeName == \"SPAN\" && target.parentElement.nodeName == \"BUTTON\"))\r\n    }\r\n\r\n    UpdateIsValid($selectedPanel){\r\n        if (this.configuration.getIsValid()){\r\n            $selectedPanel.addClass(\"is-valid\");\r\n        }\r\n\r\n        if (this.configuration.getIsInvalid()){\r\n            $selectedPanel.addClass(\"is-invalid\");\r\n        }\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if(this.stylingAdapter.UpdateSize)\r\n            this.stylingAdapter.UpdateSize($selectedPanel)\r\n    }\r\n\r\n    HoverIn($dropDownItem){\r\n        $dropDownItem.addClass(this.configuration.dropDownItemHoverClass);\r\n    }\r\n\r\n    HoverOut($dropDownItem){\r\n        $dropDownItem.removeClass(this.configuration.dropDownItemHoverClass);\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        this.stylingAdapter.Enable($selectedPanel)\r\n        disableButton($selectedPanel, false)\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        this.stylingAdapter.Disable($selectedPanel)\r\n        disableButton($selectedPanel, true)\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        this.stylingAdapter.FocusIn($selectedPanel)\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n        this.stylingAdapter.FocusOut($selectedPanel)\r\n    }\r\n}\r\n\r\nexport default Bs4Adapter;\r\n","class OptionsAdapterElement {\r\n    constructor(selectElement, configuration, $) {\r\n        var $selectElement = $(selectElement);\r\n        \r\n        configuration.getIsValid=()=>$selectElement.hasClass(\"is-valid\");\r\n        configuration.getIsInvalid=()=>$selectElement.hasClass(\"is-invalid\");\r\n        configuration.createInputId=(configuration)=>`${configuration.containerClass}-generated-filter-${selectElement.name.toLowerCase()}-id`;\r\n        configuration.label=null;\r\n        let $formGroup = $selectElement.closest('.form-group');\r\n        if ($formGroup.length == 1) {\r\n            let $label = $formGroup.find(`label[for=\"${selectElement.id}\"]`);\r\n            if ($label.length>0)\r\n            {   \r\n                let label = $label.get(0);\r\n                let forId = label.getAttribute('for');\r\n                if (forId == selectElement.id) {\r\n                    configuration.label = label;\r\n                }\r\n            }   \r\n        }\r\n        configuration.createCheckBoxId=(configuration, option)=>`${configuration.containerClass}-${selectElement.name.toLowerCase()}-generated-checkbox-${option.value.toLowerCase()}-id`;\r\n\r\n        this.init = (ms) => {\r\n            selectElement.style.display='none';\r\n            let container = document.createElement(\"div\");\r\n  \r\n            let {$container, $selectedPanel, $dropDownMenu, $filterInput} = ms.fillContainer(container, \r\n                ()=>container.parentNode.removeChild(container));\r\n            $container.insertAfter(selectElement);\r\n            ms.init($container, $selectedPanel, $dropDownMenu, $filterInput, \r\n                () => {\r\n                    $selectElement.trigger('change');\r\n                    $selectElement.trigger( \"multiselect:change\" );\r\n                }, \r\n                () => $selectElement.find('OPTION'), \r\n                () => selectElement.disabled);\r\n        }\r\n    }\r\n}\r\n\r\nexport default OptionsAdapterElement;\r\n","class OptionsAdapterJson {\r\n    constructor(container, configuration) {\r\n\r\n        configuration.getIsValid=configuration.hasOwnProperty(\"getIsValid\")?configuration.getIsValid:()=>false;\r\n        configuration.getIsInvalid=configuration.hasOwnProperty(\"getIsInvalid\")?configuration.getIsInvalid:()=>false;\r\n        configuration.createInputId=(configuration)=>`${configuration.containerClass}-generated-filter-${container.id}`;\r\n        configuration.label=configuration.hasOwnProperty(\"label\")?configuration.label:null;\r\n        configuration.createCheckBoxId=(configuration, option) =>`${configuration.containerClass}-${container.id}-generated-checkbox-${option.value.toLowerCase()}-id`;\r\n\r\n        this.init = (ms) => {\r\n            let {$container, $selectedPanel, $dropDownMenu, $filterInput} = ms.fillContainer(container,\r\n                ()=> {\r\n                    while (container.firstChild) container.removeChild(container.firstChild);\r\n                });\r\n            ms.init($container, $selectedPanel, $dropDownMenu, $filterInput, \r\n                () => {\r\n                    $container.trigger( \"multiselect:change\" );\r\n                }, \r\n                () => configuration.options, \r\n                configuration.hasOwnProperty(\"getDisabled\")?configuration.getDisabled:()=>true);\r\n        }\r\n    }\r\n}\r\n\r\nexport default OptionsAdapterJson;\r\n","import $ from 'jquery'\r\nimport Bs4AdapterCss from './Bs4AdapterCss'\r\nimport Bs4AdapterJs from './Bs4AdapterJs'\r\nimport MultiSelect from './MultiSelect'\r\nimport AddToJQueryPrototype from './AddToJQueryPrototype'\r\nimport Bs4Adapter from './Bs4Adapter';\r\nimport OptionsAdapterElement from './OptionsAdapterElement';\r\nimport OptionsAdapterJson from './OptionsAdapterJson';\r\n\r\n(\r\n    (window, $) => {\r\n        AddToJQueryPrototype('BsMultiSelect',\r\n            (element, configuration, onDispose) => {\r\n                let optionsAdapter = null;\r\n                configuration= $.extend({}, configuration);\r\n                if (configuration.optionsAdapter)\r\n                    optionsAdapter = configuration.optionsAdapter;\r\n                else\r\n                {\r\n                    optionsAdapter = configuration.options\r\n                        ? new OptionsAdapterJson(element, configuration)\r\n                        : new OptionsAdapterElement(element, configuration, $);\r\n                }\r\n\r\n                let adapter=null;\r\n                if (configuration.adapter)\r\n                    adapter = configuration.adapter;\r\n                else\r\n                {\r\n                    let stylingAdapter = configuration.useCss\r\n                        ? new Bs4AdapterCss(configuration, $)\r\n                        : new Bs4AdapterJs(configuration, $);\r\n                    adapter = new Bs4Adapter(stylingAdapter, configuration, $);\r\n                }\r\n\r\n                let multiSelect = new MultiSelect(optionsAdapter, adapter, configuration, onDispose, window, $);\r\n                return multiSelect;\r\n            }, $);\r\n    }\r\n)(window, $)\r\n","function AddToJQueryPrototype(pluginName, createPlugin, $){\r\n    const firstChar = pluginName.charAt(0);\r\n    const firstCharLower = firstChar.toLowerCase();\r\n    if (firstCharLower == firstChar) {\r\n        throw new TypeError(`Plugin name '${pluginName}' should be started from upper case char`)\r\n    }\r\n    const prototypableName = firstCharLower + pluginName.slice(1)\r\n    const noConflictPrototypable = $.fn[prototypableName];\r\n    const dataKey = `DashboardCode.${pluginName}`;\r\n\r\n    function prototypable(options) {\r\n        return this.each( function () {\r\n            let $e = $(this);\r\n            let instance = $e.data(dataKey)\r\n            let isMethodName = typeof options === 'string';\r\n            if (!instance) {\r\n                if (isMethodName && /Dispose/.test(options)) {\r\n                    return;\r\n                }\r\n                const optionsObject = (typeof options === 'object')?options:null;\r\n\r\n                instance = createPlugin(this, optionsObject,\r\n                    () => {\r\n                        $e.removeData(dataKey)\r\n                    });\r\n                $e.data(dataKey, instance);\r\n            }\r\n\r\n            if (isMethodName) {\r\n                let methodName = options;\r\n                if (typeof instance[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named '${methodName}'`)\r\n                }\r\n                instance[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[prototypableName] = prototypable;\r\n\r\n    // pluginName with first capitalized letter - return plugin instance for 1st $selected item\r\n    $.fn[pluginName] = function () {\r\n        return $(this).data(dataKey);\r\n    };\r\n\r\n    $.fn[prototypableName].noConflict = function () {\r\n        $.fn[prototypableName] = noConflictPrototypable\r\n        return prototypable;\r\n    }\r\n}\r\n\r\nexport default AddToJQueryPrototype\r\n"]}